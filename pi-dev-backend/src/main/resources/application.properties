spring.application.name=pi-dev-backend
spring.datasource.url=jdbc:mysql://localhost:3306/pi-dev-backend?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

# Activate the "dev" profile by default (you can override this with JVM arguments)
spring.profiles.active=dev

#web server
server.port=8090

#gemini configuration
#gemini.api.key=AIzaSyCP2mUaWi6vkWuGpTu0-YoYBynj1FQjgyQ
#gemini.api.url=https://api.gemini.ai/v1/chat/completions
server.servlet.context-path=/api/v1

#JWT configuration
application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
application.security.jwt.expiration=86400000
application.security.jwt.refresh-token.expiration=604800000

# Enable CORS
spring.mvc.cors.allowed-origins=http://localhost:4200
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.allow-credentials=true

# Email configuration (pasSsword moved to profile-specific properties)
#hamza
spring.mail.host=ssl0.ovh.net
spring.mail.port=587
spring.mail.username=dev@seek4digital.com
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=3000
spring.mail.properties.mail.smtp.writetimeout=5000
#taher
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=mohamed242001taher@gmail.com
spring.mail.password=ghdreckxzafiaekb
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=trueS

# OAuth2 Client Configuration - credentials moved to profile-specific properties
# Only keeping the non-sensitive configuration here
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/callback/{registrationId}

spring.security.oauth2.client.registration.github.scope=user:email,read:user
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/oauth2/callback/{registrationId}

# OAuth2 provider configuration
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user

#Debug
logging.level.org.springframework.security=DEBUG

# Custom properties for the application
# Activer le serving de fichiers statiques
file.upload-dir=D:\cloudHustler2\src\main\resources\Uploads

# Configuration CORS
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB




twilio.account.sid=AC1ef53d90ab4e11a20cfaaf667b569cb5
twilio.auth.token=294ebe4626ee4cba2bd2a0c7cef5c10b
twilio.messaging.service.sid=MG02794a30d483be66f0563dfe357fd3a8

gemini.api.key=AIzaSyDLIFjXIHY--LPUjtrnwzv5N6HqCBe6U2Q
gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent


